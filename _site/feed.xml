<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-04T22:14:45-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Genie on FOSS</title><subtitle>Regina's blog for HFOSS class.</subtitle><entry><title type="html">RITLUG TigerOS Talk</title><link href="http://localhost:4000/hfoss/2018/04/30/meetup5.html" rel="alternate" type="text/html" title="RITLUG TigerOS Talk" /><published>2018-04-30T01:03:00-04:00</published><updated>2018-04-30T01:03:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/30/meetup5</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/30/meetup5.html">&lt;p&gt;RITLUG’s week 10 meeting on March 30th at 4:30 there was a presentation on TigerOS. I’ve been involved with TigerOS as one of the main designers since it was started fall 2016. I designed the TigerOS mascot and the graphical wallpapers. All of the designs were created using open source software. I also often do user experience related things as well. The team talked about what TigerOS is. It is a linux Fedora remix that is aimed at making it easier for RIT students to start using linux. The team also talked about the struggles we have encountered along the way. What was mentioned from a lot of the team was the lack of Fedora documentation on what was needed to make a remix. We are currently working on contributing to their documentation to help fill the gaps for those who come after us. We had a lot of trouble getting any kind of build system to work and is something we are still working on. There were also some difficulties getting the rpm up.&lt;/p&gt;

&lt;p&gt;As a designer I talked about my main challenge which was learning to use the open source graphic design software as it had a high learning curve. I also struggles getting the folder structure right for adding our mascot to the operating system because the structure is fairly complex. I had to figure out the file structure using an example I tore apart trying to replace the generic logos with our mascot. I also mentioned that being a designer for TigerOS has been and continues to be a very rewarding experience. I’ve learned a lot about open source practices but also got to really design something. I usually spend most of my time doing minimal design but mostly programming. It’s been the biggest and highest impact design I’ve ever done. It’s really great and I was grateful the team got the chance to show off our hard-work to the club.&lt;/p&gt;</content><author><name></name></author><summary type="html">RITLUG’s week 10 meeting on March 30th at 4:30 there was a presentation on TigerOS. I’ve been involved with TigerOS as one of the main designers since it was started fall 2016. I designed the TigerOS mascot and the graphical wallpapers. All of the designs were created using open source software. I also often do user experience related things as well. The team talked about what TigerOS is. It is a linux Fedora remix that is aimed at making it easier for RIT students to start using linux. The team also talked about the struggles we have encountered along the way. What was mentioned from a lot of the team was the lack of Fedora documentation on what was needed to make a remix. We are currently working on contributing to their documentation to help fill the gaps for those who come after us. We had a lot of trouble getting any kind of build system to work and is something we are still working on. There were also some difficulties getting the rpm up.</summary></entry><entry><title type="html">RITLUG Open Source 101 Talk</title><link href="http://localhost:4000/hfoss/2018/04/30/meetup4.html" rel="alternate" type="text/html" title="RITLUG Open Source 101 Talk" /><published>2018-04-30T01:02:00-04:00</published><updated>2018-04-30T01:02:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/30/meetup4</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/30/meetup4.html">&lt;p&gt;RITLUG’s week 12 meeting on Friday April 13th at 4:30, had an Open Source 101 talk given by RITLUG’s President Justin Flory. The talk was the basics of what open source was. It was quick overview of HFOSS itself for the most part. He went through the four Rs and the differences between free and freedom. He touched lightly on the open hardware and maker movements that are a part of the open source world. He also went through the tools used by the open source community, covering both git and GitHub as well as the difference between the two (one is version control and the other is a source forge that uses git). He went through how to contribute to open source from using and identifying issues and making a fork and a pull request. Flory also talked about looking for on-boarding materials and looking for a welcoming community. He talked about the importance of having people who wear different hats. Open source communities need designers and organizers not just programmers.&lt;/p&gt;

&lt;p&gt;It was nice to attend this talk because it showed in part how far I had come from the beginning of the semester. It also helps to attend these talks to make it easier to explain open source to others, as I often wind up doing so. Knowing the words and explanations that others use gives me more tools for explaining open source. I hung out for a bit and talked to the guys about some e-board elections related things and some TigerOS stuff.&lt;/p&gt;</content><author><name></name></author><summary type="html">RITLUG’s week 12 meeting on Friday April 13th at 4:30, had an Open Source 101 talk given by RITLUG’s President Justin Flory. The talk was the basics of what open source was. It was quick overview of HFOSS itself for the most part. He went through the four Rs and the differences between free and freedom. He touched lightly on the open hardware and maker movements that are a part of the open source world. He also went through the tools used by the open source community, covering both git and GitHub as well as the difference between the two (one is version control and the other is a source forge that uses git). He went through how to contribute to open source from using and identifying issues and making a fork and a pull request. Flory also talked about looking for on-boarding materials and looking for a welcoming community. He talked about the importance of having people who wear different hats. Open source communities need designers and organizers not just programmers.</summary></entry><entry><title type="html">Swift RITLUG Talk</title><link href="http://localhost:4000/hfoss/2018/04/30/meetup3.html" rel="alternate" type="text/html" title="Swift RITLUG Talk" /><published>2018-04-30T01:01:00-04:00</published><updated>2018-04-30T01:01:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/30/meetup3</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/30/meetup3.html">&lt;p&gt;Friday week 11 RITLUG meeting was dedicated to a Swift talk. The talk was given by Harlan Haskins who is involved in the open source Swift community. He was gearing up to do a similar talk at a conference and so we got a sneak peak at his talk. Swift has been open sourced by Apple and has an open source community behind it. Haskins first went through the basics of how the Swift language/compiler worked. Then he covered how to get involved with the Swift open source community. He went through how you can find an issue and then the process of forking the repo and making changes. He went through detailed steps on how to get a working development copy of swift which can be difficult because Swift is so large and because there are two main suggested options for setting up a Swift development environment. It’s worth noting that one of these options relies on Xcode which is a mac only, limiting some developers to the other option. It is still entirely doable to be on linux and be a part of the Swift community.&lt;/p&gt;

&lt;p&gt;He covered how there are many kinds of issues, from small “gardening” issues which can be small tasks like adding a test case or doing small cleanup tasks. He explained some of the other jargon they use around issues such as QOI or quality of implementation issues where there is some underlying structure change but the functionality remains the same. There are different Swift teams and the owner of the component you are contributing to will overlook your PR. He also talked about how the open source community runs its decisions. It’s a “benevolent dictator for life” kind of situation. The dictator being the Swift core team at Apple. They’re the ones who make the final decisions and comes up with the goals. They have &lt;a href=&quot;https://forums.swift.org/&quot;&gt;a forum&lt;/a&gt; where a lot of the general discussions take place. Although the project has a dictator there are ways to make big changes. Anyone can submit proposals for large changes which is reviewed by the community and approved by the Swift core team. It was really interesting to see how a big open source community is able to co-exist with the dictator that is the Apple core team.&lt;/p&gt;</content><author><name></name></author><summary type="html">Friday week 11 RITLUG meeting was dedicated to a Swift talk. The talk was given by Harlan Haskins who is involved in the open source Swift community. He was gearing up to do a similar talk at a conference and so we got a sneak peak at his talk. Swift has been open sourced by Apple and has an open source community behind it. Haskins first went through the basics of how the Swift language/compiler worked. Then he covered how to get involved with the Swift open source community. He went through how you can find an issue and then the process of forking the repo and making changes. He went through detailed steps on how to get a working development copy of swift which can be difficult because Swift is so large and because there are two main suggested options for setting up a Swift development environment. It’s worth noting that one of these options relies on Xcode which is a mac only, limiting some developers to the other option. It is still entirely doable to be on linux and be a part of the Swift community.</summary></entry><entry><title type="html">WiCHacks 2018</title><link href="http://localhost:4000/hfoss/2018/04/30/meetup1.html" rel="alternate" type="text/html" title="WiCHacks 2018" /><published>2018-04-30T01:00:00-04:00</published><updated>2018-04-30T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/30/meetup1</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/30/meetup1.html">&lt;p&gt;This year I was thrilled to attend WiCHacks as a participant/volunteer. Due to busy schedules this was the first time I was able to attend Women in Computing’s all-women* hackathon. I participated with a group of friends. Our glorious group name was the &lt;a href=&quot;https://gen1e.github.io/antifreezebears/&quot;&gt;AntiFreeze Bears&lt;/a&gt; (yes there is a story behind the name that we will eventually tell). As noted in &lt;a href=&quot;https://gen1e.github.io/hfoss/2018/02/13/my-love-hate-relationship-with-twine-and-harlowe.html&quot;&gt;one of my previous posts&lt;/a&gt;, we used &lt;a href=&quot;http://twinery.org/&quot;&gt;Twine&lt;/a&gt; to create a choose your own adventure game following Atalanta as she beings freshman year of high school and struggles with female stereotypes when entering her new school’s Robotics Club. The entire game is open source, you can see the code modifications we made on &lt;a href=&quot;https://github.com/gen1e/antifreezebears&quot;&gt;our GitHub&lt;/a&gt;, which is licensed under GPL 3.0. The written story and art assets we made are all licensed under Creative Commons (CC-BY 4.0). I was mostly in charge of writing the script as well as trying to make sure we were on track. Lauren DiDonato was our main web developer who made the website and a lot of the code changes. She also helped to keep us on track. Felix Brink was our designer who made all of our art assets and chose the color scheme. Eleanor Post helped to design the game mechanics and also added some branches to the story as well as revisions to the story.&lt;/p&gt;

&lt;p&gt;We had the idea previous to the hackathon but really hashed everything out when we got there. The GitHub repo has charts that we used to help plan. There were a lot of sticky notes involved with planning and we used a white board to setup a mini kanban board. It was the first hackathon where we all actually did a project instead of homework. Most of us stayed up the whole night or most of the night. That was an adventure. Lauren and I had to stay up late as WiC Committee Head to help hold down the fort. We slept in shifts on the floor. There was a lot of caffeine and energy drinks. At various points in the hackathon I helped here and there with people’s android projects. I remember somewhat vaguely helping with another team’s android app in the wee hours of the morning. The sleep deprivation makes the latter half of the hackathon kind of foggy but we did manage to complete our project and present it for judging. I uploaded the project to this site so you can see our homepage and play our game for yourself. We were really proud of ourselves for managing to create a finished product during WiCHacks and had a whole lot of fun.&lt;/p&gt;

&lt;p&gt;* I would like to note that there were also non-binary participants, one of which was on my team.&lt;/p&gt;</content><author><name></name></author><summary type="html">This year I was thrilled to attend WiCHacks as a participant/volunteer. Due to busy schedules this was the first time I was able to attend Women in Computing’s all-women* hackathon. I participated with a group of friends. Our glorious group name was the AntiFreeze Bears (yes there is a story behind the name that we will eventually tell). As noted in one of my previous posts, we used Twine to create a choose your own adventure game following Atalanta as she beings freshman year of high school and struggles with female stereotypes when entering her new school’s Robotics Club. The entire game is open source, you can see the code modifications we made on our GitHub, which is licensed under GPL 3.0. The written story and art assets we made are all licensed under Creative Commons (CC-BY 4.0). I was mostly in charge of writing the script as well as trying to make sure we were on track. Lauren DiDonato was our main web developer who made the website and a lot of the code changes. She also helped to keep us on track. Felix Brink was our designer who made all of our art assets and chose the color scheme. Eleanor Post helped to design the game mechanics and also added some branches to the story as well as revisions to the story.</summary></entry><entry><title type="html">BrickHack 3: 2018</title><link href="http://localhost:4000/hfoss/2018/04/25/meetup2.html" rel="alternate" type="text/html" title="BrickHack 3: 2018" /><published>2018-04-25T01:01:00-04:00</published><updated>2018-04-25T01:01:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/25/meetup2</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/25/meetup2.html">&lt;p&gt;I attended RIT’s main hackathon BrickHack this year. I did not hack on a project but instead worked on homework. I did however talk to a few people who were there. I saw some friends from RIT’s MAGIC Center who I stopped to talk to for a bit. I also talked to a friend of mine Stefan Marchhart, was working on a project where he used open source python libraries to visualize music on Philips Hue lights which are able to light up different colors. His project is &lt;a href=&quot;https://github.com/Sciguystfm/HueVisualizer&quot;&gt;on GitHub&lt;/a&gt; (sadly with no license). He talked to me and the group I was with about it during a 5 am Quiplash game break.&lt;/p&gt;

&lt;p&gt;Now I attended BrickHack with my friends and I spent most of my time watching and helping them make memes. Why? Because the student representatives from Google Cloud Platform decided that they would give sweet, sweet swag to those with the best memes throughout the hackathon. So began The Great BrickHack Meme Wars of 2018. The memes were actually super creative. What was interesting from an open source perspective was that (although no official licensing was involved), it was acceptable, even encouraged, to take someone else’s memes and do something different with it. The memes would sometime be a direct response to another. As the night went on the memes would become more and more meta, incorporating almost everyone else’s memes. It very much embodies what the creative commons and open source communities strive for; a positive environment to remix and share work to everyone’s benefit. Safe to say, anyone in the BrickHack 2018 Google Cloud Platform was incredibly entertained. Also my friends have now covered our apartment in Google Cloud Platform swag. It was a really great time.&lt;/p&gt;</content><author><name></name></author><summary type="html">I attended RIT’s main hackathon BrickHack this year. I did not hack on a project but instead worked on homework. I did however talk to a few people who were there. I saw some friends from RIT’s MAGIC Center who I stopped to talk to for a bit. I also talked to a friend of mine Stefan Marchhart, was working on a project where he used open source python libraries to visualize music on Philips Hue lights which are able to light up different colors. His project is on GitHub (sadly with no license). He talked to me and the group I was with about it during a 5 am Quiplash game break.</summary></entry><entry><title type="html">Quiz 2</title><link href="http://localhost:4000/hfoss/2018/04/25/quiz2.html" rel="alternate" type="text/html" title="Quiz 2" /><published>2018-04-25T01:00:00-04:00</published><updated>2018-04-25T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/25/quiz2</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/25/quiz2.html">&lt;p&gt;HFOSS is not a lawyer, and this does not constitute legal advice.&lt;/p&gt;

&lt;p&gt;Please select the most appropriate span of time for each of the following [4pts in total]:&lt;/p&gt;

&lt;p&gt;The Bayh-Dole Act was passed, which gave rise to university technology transfer offices; the GNU Project and Free Software Foundation were founded; the US acceded to the international Berne Convention on copyrights; software was explicitly covered by US federal copyright law [ 1 pt]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c) 1980s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Creative Commons was founded. [1 pt]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;e) 2000s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;UNIX was published, Michael Hart started digitizing texts for what became Project Gutenburg, and Bill Gates wrote his “Open Letter to Hobbyists”. [1 pt]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;b) 1970s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Linus Torvalds started writing the Linux kernel, the Digital Millenium Copyright Act was passed. [1 pt]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d) 1990s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;*5) Several elements are combined in different ways to form the various Creative Commons licenses.
Please match each shorthand given in the numbered list with the letter next to the description of that license element below (2 pt for each match).\ *&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5.1) NC \C
5.2) SA \A
5.3) ND \D
5.4) BY \B
A) You must convey the same rights “downstream” that were conveyed to you by “upstream”.
B) You must attribute the contributions of the original or upstream creators of the work.
C) You may not use the work for commercial purposes.
D) You may not make changes to the work.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;6) The presence of which license elements make a license “non-free” in the eyes of the FSF? (give the letters, 1 pt XC each)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C and D as they restrict the usage of the work in a way that is not free.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;7) Which license element is a copyleft? (give the letter, 1 pt XC)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;8) Name two projects which distribute a body of non-software, free culture data, and briefly name or describe the kind of data. (1 pt XC each)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8.1) Project Gutenberg - distrubutes e-books/pdfs of books that are in the public domain

8.2) Internet Archive - free books, videos, audios, and images - not all of them are free as in freedom but they are still included in the collection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’ve discussed “the four R’s” as a shorthand for the freedoms attached to software for it to be considered “free” or “open source”. List or describe each. (eg, if you can remember the “r” word you can just give that. If you cannot remember the term, but can describe the freedom involved, that also counts). Various “r” words are roughly synonymous for some of the freedoms, but we’re counting freedoms here, not synonyms so if you give two (or more) terms for the same freedom, it only counts once. For the purposes of this quiz, “remix” does not count as describing any of them. (2pt each)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;9.1) Run

9.2) Read (the source)

9.3) Adapt to your liking, being able to change the software to fit your needs.

9.4) Redistribute
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">HFOSS is not a lawyer, and this does not constitute legal advice.</summary></entry><entry><title type="html">Open Science</title><link href="http://localhost:4000/hfoss/2018/04/22/open-science.html" rel="alternate" type="text/html" title="Open Science" /><published>2018-04-22T01:00:00-04:00</published><updated>2018-04-22T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/22/open-science</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/22/open-science.html">&lt;p&gt;There has recently been a rise in open science. This is the idea that science should be open and available to everyone. Not only should research be openly published and distributed but it also should openly publish the data and code involved. This is in part to make it easier for scientists to question each other and to perform replication studies, where other scientists repeat the experiment to verify the results. The increasing usage of technology makes it more important for scientists to make available the kind of software or equipment they used to make it easier to do these replication studies.  Another reason is that by making the research open to see that innovation can happen faster, as there is less in the way.&lt;/p&gt;

&lt;p&gt;In terms of publishing there are a few open journals where the articles in the journal are openly available. One such journal is the &lt;a href=&quot;https://www.plos.org/who-we-are&quot;&gt;PLOS journal&lt;/a&gt;. It &lt;a href=&quot;https://www.plos.org/open-access&quot;&gt;requires that all articles are attributed using CC-BY&lt;/a&gt;. Those who want to publish however do have to pay a publishing fee, which is how they stay running.&lt;/p&gt;

&lt;p&gt;In terms of open data, there are a few data repositories that have data that is open to use. NASA being one of these, making available not only data collected by their instruments but also some of their software. There are also APIs available for people to pull from as well. For their &lt;a href=&quot;https://data.nasa.gov/&quot;&gt;open data&lt;/a&gt; they also have a place to suggest data sets, which is really cool. There is some open science happening here at RIT as well. While talking to Dr. Jennifer Connelly from RIT’s Astronomy department, she mentioned another professor in the department, Dr. Michael Richmond, makes &lt;a href=&quot;http://spiff.rit.edu/richmond/ritobs/ritobs.html&quot;&gt;posts about his observations&lt;/a&gt; on the &lt;a href=&quot;https://www.rit.edu/cos/observatory/&quot;&gt;RIT’s observatory website&lt;/a&gt;. Unfortunately his posts are unlicensed so it’s not open, but it is freely available on the internet. Seeing &lt;a href=&quot;http://spiff.rit.edu/richmond/ritobs/apr21_2018/apr21_2018.html&quot;&gt;one of his posts&lt;/a&gt;, you can see he gives a summary of his observations complete with charts and also offers the measurements he made in a text file that is available for download. It’s really awesome that he does this for those who do not have access to a professional telescope or want to see what other scientists are doing.&lt;/p&gt;

&lt;p&gt;I will continue to watch the rise of open science and it’s presence in our RIT community.&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://opensource.com/resources/open-science&quot;&gt;https://opensource.com/resources/open-science&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itsfoss.com/nasa-open-science/&quot;&gt;https://itsfoss.com/nasa-open-science/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itsfoss.com/open-source-impact-on-science/&quot;&gt;https://itsfoss.com/open-source-impact-on-science/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rit.edu/cos/observatory/&quot;&gt;https://www.rit.edu/cos/observatory/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.plos.org/&quot;&gt;https://www.plos.org/&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">There has recently been a rise in open science. This is the idea that science should be open and available to everyone. Not only should research be openly published and distributed but it also should openly publish the data and code involved. This is in part to make it easier for scientists to question each other and to perform replication studies, where other scientists repeat the experiment to verify the results. The increasing usage of technology makes it more important for scientists to make available the kind of software or equipment they used to make it easier to do these replication studies. Another reason is that by making the research open to see that innovation can happen faster, as there is less in the way.</summary></entry><entry><title type="html">GIMP and Inkscape: A Love Hate Relationship</title><link href="http://localhost:4000/hfoss/2018/04/11/gimp-and-inkscape.html" rel="alternate" type="text/html" title="GIMP and Inkscape: A Love Hate Relationship" /><published>2018-04-11T01:00:00-04:00</published><updated>2018-04-11T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/11/gimp-and-inkscape</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/11/gimp-and-inkscape.html">&lt;p&gt;As obvious by the title, I have a love hate relationship with both &lt;a href=&quot;https://www.gimp.org/&quot;&gt;GIMP&lt;/a&gt; and &lt;a href=&quot;https://inkscape.org/en/&quot;&gt;Inkscape&lt;/a&gt;. For the uninitiated, GIMP is an open source image editing program. GIMP is most similar to the proprietary industry standard of Adobe Photoshop. Inkscape is a vector graphics program that is similar in function to the proprietary industry standard Adobe Illustrator. I have a lot of experience with both as I used them to do design work for &lt;a href=&quot;https://github.com/RITlug/TigerOS&quot;&gt;TigerOS&lt;/a&gt;, an open source remix of Fedora aimed specifically at getting RIT students into Linux. I was able to use Inkscape to create the TigorOS mascot and used GIMP to make the wallpapers. Although I appreciated being able to do design work using open source software, especially not having to pay for Adobe with both my arms and my legs, I always struggle with it. I know that it takes time to learn design software because it tends to be quite complex but I find both GIMP and Inkscape have quite a learning curve. The options bars along the side are a bit cryptic and it can be difficult to find things like layers at first. I know that both communities are making an effort to increase their user experience. Regardless, they both are valuable resources and are good open source solutions.&lt;/p&gt;</content><author><name></name></author><summary type="html">As obvious by the title, I have a love hate relationship with both GIMP and Inkscape. For the uninitiated, GIMP is an open source image editing program. GIMP is most similar to the proprietary industry standard of Adobe Photoshop. Inkscape is a vector graphics program that is similar in function to the proprietary industry standard Adobe Illustrator. I have a lot of experience with both as I used them to do design work for TigerOS, an open source remix of Fedora aimed specifically at getting RIT students into Linux. I was able to use Inkscape to create the TigorOS mascot and used GIMP to make the wallpapers. Although I appreciated being able to do design work using open source software, especially not having to pay for Adobe with both my arms and my legs, I always struggle with it. I know that it takes time to learn design software because it tends to be quite complex but I find both GIMP and Inkscape have quite a learning curve. The options bars along the side are a bit cryptic and it can be difficult to find things like layers at first. I know that both communities are making an effort to increase their user experience. Regardless, they both are valuable resources and are good open source solutions.</summary></entry><entry><title type="html">My Manservant Mycroft</title><link href="http://localhost:4000/hfoss/2018/04/02/my-manservant-mycroft.html" rel="alternate" type="text/html" title="My Manservant Mycroft" /><published>2018-04-02T01:00:00-04:00</published><updated>2018-04-02T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/04/02/my-manservant-mycroft</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/04/02/my-manservant-mycroft.html">&lt;p&gt;Recently I’ve been interested in various AIs and virtual assistants. This is partially because of working on the &lt;a href=&quot;https://github.com/Women-in-Computing-at-RIT/Magic-Mirror&quot;&gt;Magic Mirror project&lt;/a&gt; as Women in Computing at RIT’s Projects Committee Head. At one point we were looking at various open source voice assistant/AIs to use. One of the main assistants we were looking at was &lt;a href=&quot;https://mycroft.ai/&quot;&gt;Mycroft&lt;/a&gt;. Mycroft is an open source AI licensed under Apache 2.0 and it is available on &lt;a href=&quot;https://github.com/MycroftAI/mycroft-core&quot;&gt;GitHub&lt;/a&gt;. Mycroft is available on &lt;a href=&quot;https://mycroft.ai/get-mycroft/&quot;&gt;several platforms&lt;/a&gt; including their device the Mycroft Mark I, with their next version the Mark II currently in crowd funding and slated to be out December 2018. These devices serve as a direct competitor to proprietary assistants like Google Home and Amazon’s Alexa. Mycroft is not only an open source alternative to these devices but also serves as a platform that is much more privacy conscious. The best part about Mycroft is that is can be downloaded to run on a Raspberry Pi 3 so people can customize their hardware setup easily. Someone can get a better speaker or microphone for their setup. It can also be installed on most Linux desktop distros, much like having an assistant on other operating systems (I hope to install it on my desktop for fun when I get the time). It is also possible to get it onto Android if you are willing to go through android studio to hack it into an apk runnable.&lt;/p&gt;

&lt;p&gt;Mycroft seems to be the most viable open source competitor to proprietary assistants, their successful kickstarter for their Mark I and currently successful campaign for their Mark II proving that. Full disclaimer, I have backed their Mycroft II Indiegogo campaign. They are one of the few open source AIs I’ve seen attempting to make a physical box aimed to eventually be able to be an out of the box experience, designed for those who have little to no technical skills. It’s worth noting that Mycroft is backed up by an actual company that decided to make their code open source. I’m very interested in this project and will continue to follow it as it grows, I encourage you to check it out for yourself.&lt;/p&gt;</content><author><name></name></author><summary type="html">Recently I’ve been interested in various AIs and virtual assistants. This is partially because of working on the Magic Mirror project as Women in Computing at RIT’s Projects Committee Head. At one point we were looking at various open source voice assistant/AIs to use. One of the main assistants we were looking at was Mycroft. Mycroft is an open source AI licensed under Apache 2.0 and it is available on GitHub. Mycroft is available on several platforms including their device the Mycroft Mark I, with their next version the Mark II currently in crowd funding and slated to be out December 2018. These devices serve as a direct competitor to proprietary assistants like Google Home and Amazon’s Alexa. Mycroft is not only an open source alternative to these devices but also serves as a platform that is much more privacy conscious. The best part about Mycroft is that is can be downloaded to run on a Raspberry Pi 3 so people can customize their hardware setup easily. Someone can get a better speaker or microphone for their setup. It can also be installed on most Linux desktop distros, much like having an assistant on other operating systems (I hope to install it on my desktop for fun when I get the time). It is also possible to get it onto Android if you are willing to go through android studio to hack it into an apk runnable.</summary></entry><entry><title type="html">HFOSS Commarch Project: Jekyll</title><link href="http://localhost:4000/hfoss/2018/03/27/commarch.html" rel="alternate" type="text/html" title="HFOSS Commarch Project: Jekyll" /><published>2018-03-27T01:00:00-04:00</published><updated>2018-03-27T01:00:00-04:00</updated><id>http://localhost:4000/hfoss/2018/03/27/commarch</id><content type="html" xml:base="http://localhost:4000/hfoss/2018/03/27/commarch.html">&lt;p&gt;In HFOSS class we had our Commarch project. This was a group project where we anaylized an open source project’s git repository. My team decided to do Jekyll. Our proposal can be found &lt;a href=&quot;https://github.com/axk4545/hfoss-commarch/blob/master/teamproposal.md&quot;&gt;on our GitHub repository&lt;/a&gt;. You can also find the &lt;a href=&quot;https://github.com/axk4545/hfoss-commarch/blob/master/report.md&quot;&gt;full report&lt;/a&gt; and &lt;a href=&quot;https://github.com/axk4545/hfoss-commarch/tree/master/presentation&quot;&gt;the source&lt;/a&gt; for our &lt;a href=&quot;https://gen1e.github.io/commarch/&quot;&gt;presentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We used &lt;a href=&quot;https://github.com/tomheon/git_by_a_bus/tree/v2&quot;&gt;git by a bus v2&lt;/a&gt; to get data and &lt;a href=&quot;https://github.com/liam-middlebrook/git_by_a_lion&quot;&gt;git by a lion&lt;/a&gt; to process that output. We also calculated the &lt;a href=&quot;https://github.com/ritjoe/hfoss/blob/master/assets/tomspotcallaway-howtotellifyourfossprojectisdoomedtofail.pdf&quot;&gt;Callaway Coefficient of Fail&lt;/a&gt; that is also in &lt;a href=&quot;https://github.com/axk4545/hfoss-commarch&quot;&gt;our repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found the project to be very interesting and really helped me to connect a lot of the conepts we talked about when reading Eghbal’s “Roads and Bridges” to a real world project.&lt;/p&gt;</content><author><name></name></author><summary type="html">In HFOSS class we had our Commarch project. This was a group project where we anaylized an open source project’s git repository. My team decided to do Jekyll. Our proposal can be found on our GitHub repository. You can also find the full report and the source for our presentation.</summary></entry></feed>