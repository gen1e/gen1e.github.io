---
layout: post
title:  "Swift RITLUG Talk"
date:   2018-04-30 00:01:00 -0500
categories: hfoss
---
Friday week 11 RITLUG meeting was dedicated to a Swift talk. The talk was given by Harlan Haskins who is involved in the open source Swift community. He was gearing up to do a similar talk at a conference and so we got a sneak peak at his talk. Swift has been open sourced by Apple and has an open source community behind it. Haskins first went through the basics of how the Swift language/compiler worked. Then he covered how to get involved with the Swift open source community. He went through how you can find an issue and then the process of forking the repo and making changes. He went through detailed steps on how to get a working development copy of swift which can be difficult because Swift is so large and because there are two main suggested options for setting up a Swift development environment. It's worth noting that one of these options relies on Xcode which is a mac only, limiting some developers to the other option. It is still entirely doable to be on linux and be a part of the Swift community. 

He covered how there are many kinds of issues, from small "gardening" issues which can be small tasks like adding a test case or doing small cleanup tasks. He explained some of the other jargon they use around issues such as QOI or quality of implementation issues where there is some underlying structure change but the functionality remains the same. There are different Swift teams and the owner of the component you are contributing to will overlook your PR. He also talked about how the open source community runs its decisions. It's a "benevolent dictator for life" kind of situation. The dictator being the Swift core team at Apple. They're the ones who make the final decisions and comes up with the goals. They have [a forum](https://forums.swift.org/) where a lot of the general discussions take place. Although the project has a dictator there are ways to make big changes. Anyone can submit proposals for large changes which is reviewed by the community and approved by the Swift core team. It was really interesting to see how a big open source community is able to co-exist with the dictator that is the Apple core team.
